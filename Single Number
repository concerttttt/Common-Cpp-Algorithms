//Solution one
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int result = 0;
        for(int i=0;i<nums.size();i++)
            result ^= nums[i];
        return result;
    }
};

//solution two
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        int n = nums.size();
        if(nums[0] != nums[1] )return nums[0];
        if(nums[n-1] != nums[n-2])return nums[n-1];
        int num;
        for(int i = 1;i < n-1;i++)
        {
            if(nums[i] != nums[i-1] && nums[i] != nums[i+1]) return nums[i];
        }
    }
};


//solution three

class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        vector<int>     count;
        sort(nums.begin(),nums.end());
        if(nums[0] != nums[1])count.push_back(nums[0]);
        if(nums[nums.size()-1] != nums[nums.size()-2])count.push_back(nums[nums.size()-1]);
        for(int i = 1; i < nums.size() -1 ; i++)
        {
            if((nums[i] != nums[i+1]) && (nums[i] != nums[i-1]))
                count.push_back(nums[i]);
        }
        return count;
    }
};
