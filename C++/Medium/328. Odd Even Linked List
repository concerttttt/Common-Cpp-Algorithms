/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(!head || !head->next || !head->next->next)   return head;
        
        ListNode* pOddMark = head;
        ListNode* pOddWork = head;
        ListNode* pEvenMark = head->next;
        ListNode* pEvenWork = head->next;
        
        while(pOddWork || pEvenWork)
        {
            if(pOddWork->next && pOddWork->next->next)
            {
                pOddWork->next = pOddWork->next->next;
                pOddWork = pOddWork->next;
            }
            
            if(pEvenWork->next && pEvenWork->next->next)
            {
                pEvenWork->next = pEvenWork->next->next;
                pEvenWork = pEvenWork->next;
            }
            else
                pEvenWork->next = nullptr;
                
            if((!pOddWork->next || !pOddWork->next->next) && !pEvenWork->next)
                break;
        }
        
        pOddWork->next = pEvenMark;
        
        return pOddMark;
    }
};
