/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
        void searchTreePaths(vector<string>& result,TreeNode* root, string str)
        {
            if(!root->left && !root->right)
            {
                result.push_back(str);
                return ;
            }
            if(root->left)  searchTreePaths(result,root->left,str+"->"+to_string(root->left->val));
            if(root->right) searchTreePaths(result,root->right,str+"->"+to_string(root->right->val));
            
        }
        vector<string> binaryTreePaths(TreeNode* root) 
        {
            vector<string>  result;
            if(!root)       return result;
            
            searchTreePaths(result,root,to_string(root->val));
            return result;
        }
};
