
// First Solution
class Solution {
public:
    int strStr(string haystack, string needle) {
        int pos;
        if((pos = haystack.find(needle)) == string::npos) return -1;
        return pos;
    }
};


//Second Solution
class Solution {
public:
    int strStr(string haystack, string needle) {
        int h = haystack.size();
        int n = needle.size();
        if(h < n)   return -1;
        if(n == 0)  return 0;
        for(int i = 0;i < h-n+1;i++)
        {
            int j = 0;
            for(;j < n;j++)
                if(haystack[i+j] != needle[j])  break;
            if(j == n)  return i;
        }
        return -1;
    }
};

//Third Solution
To be continued : KMP & Boyer Moore Algorithms
