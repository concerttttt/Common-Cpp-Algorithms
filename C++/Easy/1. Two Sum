//Solution One
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> res;
        int i,j;
        for(i = 0;i < nums.size()-1;i++)
            for(j = i + 1;j < nums.size();j++)
            {
                if((nums[i] + nums[j]) == target)
                {
                    res.push_back(i);
                    res.push_back(j);
                    break;
                }
            }
        return res;
    }
};

//Solution Two
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> result;
        unordered_map<int,int>      hashtable;
        int     x;
        for(int i = 0;i < nums.size();i++)
        {
            x = target - nums[i];
            if(hashtable.find(x) != hashtable.end())
            {
                result.push_back(hashtable[x]);
                result.push_back(i);
                return result;
            }
            hashtable[nums[i]] = i;
        }
        return result;
    }
};
