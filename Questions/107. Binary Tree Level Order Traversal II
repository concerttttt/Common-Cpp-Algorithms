/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int TreeDepth(TreeNode *root)
    {
        if(root==NULL)  return 0;
        return  max(TreeDepth(root->left),TreeDepth(root->right))+1;
    }
    void TreeSerialization(vector<vector<int>>  &result,TreeNode* root,int level)
    {
        if(root == NULL)    return;
        result[level].push_back(root->val);
        TreeSerialization(result,root->left,level-1);
        TreeSerialization(result,root->right,level-1);
    }
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        int d = TreeDepth(root);
        vector<vector<int>> result(d,vector<int>{});
        TreeSerialization(result,root,d - 1);
        return result;
    }
};
